//=============================================================================
//
// リザルト [result.cpp]
// Author : 羽鳥太一
//
//=============================================================================
//=============================================================================
// インクルード
//=============================================================================
#include "result.h"
#include "manager.h"
#include "textureobj.h"
#include "sound.h"
#include "keyinput.h"
#include "fade.h"

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CResult::CResult()
{

}

//=============================================================================
// デフォルトデストラクタ
//=============================================================================
CResult::~CResult()
{

}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CResult::Init(void)
{
	// 2Dポリゴンを生成
	CUiObj::Create(D3DXVECTOR3(SCREEN_CENTER_X, SCREEN_CENTER_Y, 0.0f), D3DXVECTOR3(SCREEN_CENTER_X, SCREEN_CENTER_Y, 0.0f), "RESULTBG");

	return S_OK;
}

//=============================================================================
// 終了
//=============================================================================
void CResult::Uninit(void)
{
	// 全て破棄
	CScene::ReleaseAll();
}

//=============================================================================
// 更新処理
//=============================================================================
void CResult::Update(void)
{
	CKeyboard *pKey = CManager::GetKeyboard();	// キーボードの取得
	CFade *pFade = CManager::GetFade();	// フェードの取得

	// エンターキーを押していたら && フェードしてなかったら
	if (pKey->GetTrigger(pKey->ENTER) == true && pFade->GetFade() == CFade::FADE_NONE)
	{
		// タイトルへ遷移
		pFade->SetFade(CManager::MODE::TITLE);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CResult::Draw(void)
{

}