//=============================================================================
//
// 入力処理 [input.cpp]
// Author : 羽鳥太一
//
//=============================================================================
//=============================================================================
// インクルード
//=============================================================================
#include "title.h"
#include "manager.h"
#include "textureobj.h"
#include "sound.h"

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CTitle::CTitle()
{

}

//=============================================================================
// デフォルトデストラクタ
//=============================================================================
CTitle::~CTitle()
{

}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CTitle::Init(void)
{
	CSound *pSound = CManager::GetSound();	// サウンドの取得
	FILE *pFile;	// ファイルのポインタ
	D3DXVECTOR3 Pos;	// 位置
	D3DXVECTOR3 Size;	// サイズ
	char aFile[1][128];	// ファイルの文字バッファ

	// ファイルを開く
	pFile = fopen("data/Txtdata/titledata.txt", "r");

	// ファイルが開けていたら
	if (pFile != NULL)
	{
		int nCnt = 0;	// UIカウント

		// 無限ループ
		while (true)
		{
			// 文字を取得
			fscanf(pFile, "%s", aFile[0]);

			// UI_NUMの文字列を見つけたら
			if (strcmp(aFile[0], "UI_NUM") == 0)
			{
				// UI数を保存
				fscanf(pFile, "%*s%d", &m_nUiNum);
			}
			// SET_UIの文字列を見つけたら
			if (strcmp(aFile[0], "SET_UI") == 0)
			{
				// 無限ループ
				while (true)
				{
					// 文字を取得
					fscanf(pFile, "%s", aFile[0]);

					// TEX_TYPEの文字列を見つけたら
					if (strcmp(aFile[0], "TEX_TYPE") == 0)
					{
						char aTypeBuf[1][64];	// 文字を取得する為のバッファ
						string Type;	// ストリング配列に入れる為のバッファ

						// 文字を取得
						fscanf(pFile, "%*s%s", aTypeBuf[0]);

						// ストリングへ変換
						Type = aTypeBuf[0];

						// 配列に保存
						m_Type.push_back(Type);
					}
					// POSの文字列を見つけたら
					else if (strcmp(aFile[0], "POS") == 0)
					{
						// 位置情報を保存
						fscanf(pFile, "%*s%f%f%f", &Pos.x, &Pos.y, &Pos.z);
					}
					// SIZEの文字列を見つけたら
					else if (strcmp(aFile[0], "SIZE") == 0)
					{
						// サイズ情報を保存
						fscanf(pFile, "%*s%f%f%f", &Size.x, &Size.y, &Size.z);
					}
					// END_UISETの文字列を見つけたら
					else if (strcmp(aFile[0], "END_UISET") == 0)
					{
						// 取得した情報で生成
						CUiObj::Create(Pos, Size, m_Type[nCnt]);

						// UIカウントアップ
						nCnt++;

						// ループをぬける
						break;
					}
				}
			}
			// ENDの文字列を見つけたら
			else if (strcmp(aFile[0], "END") == 0)
			{
				// ループをぬける
				break;
			}
		}
	}
	else
	{
		cout << "テキストファイルがひらけませんでした。";
	}

	// ファイルを閉じる
	fclose(pFile);

	// 再生
	pSound->PlaySound(CSound::X2SOUND_LABEL::TITLE);

	return S_OK;
}

//=============================================================================
// 終了
//=============================================================================
void CTitle::Uninit(void)
{
	// 破棄
	CScene::ReleaseAll();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTitle::Update(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void CTitle::Draw(void)
{

}